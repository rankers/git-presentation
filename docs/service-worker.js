"use strict";var precacheConfig=[["/index.html","0b7e37553a033eaedd52822332fa8113"],["/static/css/main.653da357.css","521def3ae35e5b12d25e0300c45174f2"],["/static/js/main.7e883daf.js","18648ba78c82c8b0055df1606158424a"],["/static/media/01.2667b86c.svg","2667b86c8d229387459b7595de1a76e0"],["/static/media/02.ffb4536f.svg","ffb4536f7728ae28594958aaca9659e3"],["/static/media/03.6480d07d.svg","6480d07dcea3d4a3947bd5bb43c05f49"],["/static/media/04.26ff44e0.svg","26ff44e057316d07d53495b0129fb409"],["/static/media/05.34e0fc34.svg","34e0fc3447edc79347d93a96fec5ecd9"],["/static/media/06.46022edc.svg","46022edc61a0304e4f0056251b1dcd4a"],["/static/media/07.e770c357.svg","e770c35775c0d1d337ff692f836a1fb9"],["/static/media/08.7bc62cbc.svg","7bc62cbcaef7f976b71d7b0d0f482fd9"],["/static/media/09.4b01f54a.svg","4b01f54a87515b1fc9cb164f343f095e"],["/static/media/10.5628bda6.svg","5628bda6d4f9933a33d3f63d8ed6c7ed"],["/static/media/commit-msg.dfe8e610.png","dfe8e610448e19e075f50216d4f28851"],["/static/media/deltas.dd7830f0.png","dd7830f081d24ebbac3e0ec482ae7731"],["/static/media/first-git-commit.d0699a1c.png","d0699a1c979fc582ef8c3322560d68d1"],["/static/media/interactive-rebase-cl.dc5d85c9.png","dc5d85c96b832063e67d3ca4e0b358ef"],["/static/media/interactive-rebase-ui.37c99e8d.png","37c99e8d9d4f264e22611a919064941c"],["/static/media/linus.4dbde3ce.png","4dbde3ced8fd343e1a5b81a3ac39dce6"],["/static/media/merge.a8d162c1.png","a8d162c175526cb94be73fa1ebbe70d5"],["/static/media/rebase-meme.b2b72787.png","b2b72787e2ae0faa2df4bde0221aeef3"],["/static/media/reset-01.da97b12a.png","da97b12a92628e050ea44721cec209e3"],["/static/media/reset-02.784ac086.png","784ac086cde4b3401f6db338efe376f4"],["/static/media/reset-03.7564cc27.png","7564cc275195cb505a8647ebfa1b810e"],["/static/media/reset-04.27a8eabb.png","27a8eabb15fccea82a23b09464292718"],["/static/media/snapshots.e72ac15a.png","e72ac15adb7356b02a12eafc1ef31b46"],["/static/media/staging-directories.8384248b.png","8384248ba1ee1cd713a3c21b08334ea0"],["/static/media/what-is-a-branch.8e1affdc.png","8e1affdc6bb639f6325a5008a5e024da"],["/static/media/what-is-a-commit.73c52237.png","73c522372d9c29adb7ba2fcdd541912a"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,a,t,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),n.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],c=new URL(a,self.location),n=createCacheKey(c,hashParamName,t,/\.\w{8}\./);return[c.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var c=new Request(t,{credentials:"same-origin"});return fetch(c).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),c="index.html";(a=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,c),a=urlsToCacheKeys.has(t));var n="/index.html";!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL(n,self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});